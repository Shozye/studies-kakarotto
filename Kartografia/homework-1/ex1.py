def RSA(x, N, e):
    return pow(x, e, N)


def RSA_CRT(x, p, q, dp, dq, qi):
    xp = pow(x, dp, p)
    xq = pow(x, dq, q)
    h = ((xp - xq) * qi) % p
    return xq + h * q


def RSA_tests():
    assert RSA(123456, 183457, 17) == 165799
    assert RSA(165799, 183457, 10741) == 123456
    assert RSA(124040, 183457, 17) == 123456
    assert RSA(123456,
               26634547600177008912365441464036882611104634136430581696102639463075266436216946316053845642300166320042915031924501272705275043130211783228252369194856949397782880847235143381529207382262647906987655738647387007320361149854766523417293323739185308113373529512728932838100141612048712597178695720651344295450174895369923383396704334331627261565907266749863744707920606364678231639106403854977302183719246256958550651555767664134467706614553219592981545363271425781391262006405169505726523023628770285432062044391310047445749287563161668548354322560223509946990827691654627968182167826397015368836435965354956581554819,
               65537) == 9996461122498386712870555303564649657851858757895612968316098781413903517823362079256925567068383018846244636605693119587559524547088338151024889593028297604145507373563096304925300096186608144748894070384550891237622292130016093020276322457751274726522583269664907778180797715831303400572558911431129493279344922592244221708490723165830762068983163321215045538625852433643073482361438052099365960550793633490221762288462650035891250326071521405916818471127799270925696910399626523585388441962730025048784817211566741537706130179374727186311244362876927015885132639750572800364270723954549075834179192223831977315665


def RSA_CRT_tests():
    assert RSA_CRT(165799, 383, 479, 45, 225, 4) == 123456
    assert RSA_CRT(123456, 383, 479, 45, 225, 4) == 124040


if __name__ == "__main__":
    RSA_tests()
    RSA_CRT_tests()

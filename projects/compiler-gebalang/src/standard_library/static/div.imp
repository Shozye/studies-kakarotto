SET 0 [ p := 0 ]
STOREI p
LOAD b [ IF b == 0 GOTO E_DIV_ENDWHILE ] [ IF a < b GOTO E_DIV_ENDWHILE ]
JZERO E_DIV_ENDWHILE
SUB a
JPOS E_DIV_ENDWHILE
E_DIV_WHILE_BODY : SET 1 [ temp := 1 ]
STORE temp
LOAD b [ b_copy := b ]
STORE b_copy
SUB a
JPOS E_DIV_INNER_ENDWHILE [ IF b_copy - a > 0 GOTO E_DIV_INNER_ENDWHILE ]
E_DIV_INNER_WHILE_BODY : LOAD temp [ temp *= 2 ]
ADD *storage_0*
STORE temp
LOAD b_copy [ b_copy *= 2 ]
ADD *storage_0*
STORE b_copy
SUB a [ IF b_copy - a = 0 GOTO E_DIV_INNER_WHILE_BODY ]
JZERO E_DIV_INNER_WHILE_BODY
E_DIV_INNER_ENDWHILE : LOAD b_copy [ b_copy /= 2 ]
HALF
STORE b_copy
LOAD temp [ temp /= 2 ] [ p := p + temp ]
HALF
STORE temp
ADDI p
STOREI p
LOAD a [ a := a - b_copy ]
SUB b_copy
STORE a
LOAD b [ IF a >= b GOTO E_DIV_WHILE_BODY ]
SUB a
JZERO E_DIV_WHILE_BODY
E_DIV_ENDWHILE : JUMPI $ret
